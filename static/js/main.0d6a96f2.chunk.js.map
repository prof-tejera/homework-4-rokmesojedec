{"version":3,"sources":["components/Number.js","components/Operator.js","components/Screen.js","components/Calculator.js","App.js","index.js"],"names":["Number","className","onClick","props","value","this","Component","Operator","join","Screen","Calculator","state","first","operator","second","negate","handleNumberClick","number","setState","handleOperatorClick","parseFloat","getScreenValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d6a96f2.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Buttons.scss\";\n\nclass Number extends Component {\n  render() {\n    return (\n      <div className=\"number\" onClick={() => this.props.onClick(this.props.value)}>\n        {this.props.value}\n      </div>\n    );\n  }\n}\n\nNumber.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n}\n\nexport default Number;\n","import { Component } from 'react';\nimport \"./Buttons.scss\";\nimport PropTypes from 'prop-types';\n\nclass Operator extends Component {\n  render() {\n    return (\n      <div className={[\"operator\", this.props.className].join(\" \")} onClick={() => this.props.onClick(this.props.value)}>\n        {this.props.value}\n      </div>\n    );\n  }\n}\nOperator.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default Operator;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Screen.scss\";\n\nclass Screen extends Component {\n  render() {\n    return <div className=\"screen\">{this.props.value}</div>;\n  }\n}\nScreen.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.oneOf([PropTypes.string, PropTypes.number])\n}\n\nexport default Screen;\n","import { Component } from \"react\";\n\nimport Number from \"./Number\";\nimport Operator from \"./Operator\";\nimport Screen from \"./Screen\";\nimport \"./Calculator.scss\";\n\nclass Calculator extends Component {\n  state = {\n    first: null,\n    operator: null,\n    second: null,\n    negate: null\n  };\n\n  handleNumberClick = (number) => {\n    if (!this.state.operator) {\n      if (number === \".\" && !this.state.first)\n        this.setState({ first: `0.` });\n      else\n        this.setState({ first: `${this.state.first || \"\"}${number}` });\n    } else {\n      if (number === \".\" && !this.state.second)\n        this.setState({ first: `0.` });\n      else\n        this.setState({ second: `${this.state.second || \"\"}${number}` });\n    }\n  };\n\n  // I am not quite sure why Math.js was suggested in the section.\n  // Vanilla parseFloat does the job well\n  \n  get first() {\n    return parseFloat(this.state.first);\n  }\n\n  get second() {\n    return parseFloat(this.state.second);\n  }\n\n  handleOperatorClick = (operator) => {\n    if (operator === \"-\" && (!this.state.first || (this.state.first && this.state.operator && !this.state.second))) {\n      const first = parseFloat(this.state.first);\n      const second = parseFloat(this.state.second);\n      if (!this.state.operator && !first) {\n        this.setState({ first: `-` });\n      } else if (!second) {\n        this.setState({ second: `-` });\n      }\n    }\n    else if (operator === \"=\") {\n      if (this.state.operator === \"+\") {\n        this.setState({ operator: null, first: this.first + this.second, second: null });\n      } else if (this.state.operator === \"/\") {\n        this.setState({ operator: null, first: this.first / this.second, second: null });\n      } else if (this.state.operator === \"-\") {\n        this.setState({ operator: null, first: this.first - this.second, second: null });\n      } else if (this.state.operator === \"x\") {\n        this.setState({ operator: null, first: this.first * this.second, second: null });\n      }\n    } else if (operator === \"clear\") {\n      this.setState({ first: null, second: null, operator: null });\n    } else {\n      this.setState({ operator });\n    }\n  };\n\n  getScreenValue = () => this.state.second || this.state.first;\n\n  render() {\n    return (\n      <>\n        <div className=\"calculator\">\n          <Screen value={this.getScreenValue()} />\n          <div>\n            <div className=\"keypad\">\n              <Number value={7} onClick={this.handleNumberClick} />\n              <Number value={8} onClick={this.handleNumberClick} />\n              <Number value={9} onClick={this.handleNumberClick} />\n              <Number value={4} onClick={this.handleNumberClick} />\n              <Number value={5} onClick={this.handleNumberClick} />\n              <Number value={6} onClick={this.handleNumberClick} />\n              <Number value={1} onClick={this.handleNumberClick} />\n              <Number value={2} onClick={this.handleNumberClick} />\n              <Number value={3} onClick={this.handleNumberClick} />\n              <Number value={0} onClick={this.handleNumberClick} />\n              <Number value=\".\" onClick={this.handleNumberClick} />\n            </div>\n          </div>\n          <div>\n            <div className=\"operators\">\n              <Operator value=\"+\" onClick={this.handleOperatorClick} />\n              <Operator value=\"/\" onClick={this.handleOperatorClick} />\n              <Operator value=\"x\" onClick={this.handleOperatorClick} />\n              <Operator value=\"-\" onClick={this.handleOperatorClick} />\n              <Operator value=\"clear\" onClick={this.handleOperatorClick} />\n              <Operator className=\"equal\" value=\"=\" onClick={this.handleOperatorClick} />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Calculator;\n","import './App.scss';\nimport Calculator from 'components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}